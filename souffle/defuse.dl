// Modification example quoted from 19.1 datalog of Copmiler structure and optimization 2nd by NAKATA Ikuo

// Type
.number_type vv
.number_type stm 

// Relation delcaration
.decl reach(v:vv,p:stm,q:stm)
.decl def(v:vv,p:stm) input
.decl next(v:stm,p:stm) input
.decl exit(p:stm) input
.decl succ(p:stm,q:stm) input
.decl use(v:vv,p:stm) input
.decl defuse(v:vv,p:stm,q:stm) output

// Rule
reach(x,p,q) :- def(x,p),next(p,q).
reach(x,p,q) :- reach(x,p,r),def(y,r),next(r,q),x != y .
reach(x,p,s) :- reach(x, p, r), exit( r), succ(r, s) .
defuse(x,p,q) :- reach(x, p, q), use(x,q) .

// next(1,2) .
// next(2,11) .
// next(3,12) .
// next(4,5) .
// next(5,13) .
// next(6,7) .
// next(7,14) .
// next(8,15) .
// exit(11) .
// exit(12) .
// exit(13) .
// exit(14) .
// exit(15) .
// exit(16) .
// succ(11,3) .
// succ(12,4) .
// succ(13,3) .
// succ(13,6) .
// succ(14,8) .
// succ(14,10) .
// succ(15,10) .
// succ(16,4) .
// def(1,2) .
// def(1,3) .
// def(1,8) .
// def(2,1) .
// def(2,4) .
// def(2,6) .
// def(3,5) .
// def(3,7) .
// use(1,3) .
// use(1,6) .
// use(1,7) .
// use(2,4) .
// use(2,5) .
// 
// 
// 
// 
